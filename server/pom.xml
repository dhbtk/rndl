<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.edanni.rndl</groupId>
        <artifactId>rndl-root</artifactId>
        <version>0.1.0</version>
        <relativePath>../</relativePath>
    </parent>

    <artifactId>server</artifactId>
    <packaging>jar</packaging>

    <properties>
        <db.host>localhost</db.host>
        <db.database>rndl</db.database>
        <db.username>rndl</db.username>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jre8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.threeten</groupId>
            <artifactId>threetenbp</artifactId>
            <version>${threetenbp.version}</version>
        </dependency>

        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts</artifactId>
            <version>${jts.version}</version>
        </dependency>

        <dependency>
            <groupId>net.dmitry.jooq.postgis.spatial</groupId>
            <artifactId>jooq-postgis-spatial</artifactId>
            <version>${jooq-postgis.version}</version>
        </dependency>

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${modelmapper.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.bedatadriven</groupId>
            <artifactId>jackson-datatype-jts</artifactId>
            <version>${jackson-jts.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.joschi.jackson</groupId>
            <artifactId>jackson-datatype-threetenbp</artifactId>
            <version>${jackson-threetenbp.version}</version>
        </dependency>

        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java-jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <url>jdbc:postgresql://${db.host}/${db.database}</url>
                    <user>${db.username}</user>
                    <locations>
                        <location>filesystem:src/main/resources/db/migration</location>
                    </locations>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <executions>
                    <execution>
                        <id>generate-pg</id>
                        <phase>generate-sources</phase>

                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <jdbc>
                                <driver>org.postgresql.Driver</driver>
                                <url>jdbc:postgresql://${db.host}/${db.database}</url>
                                <user>${db.username}</user>
                                <password/>
                            </jdbc>
                            <generator>
                                <database>
                                    <includes>.*</includes>
                                    <excludes>^(schema_version|spatial_ref_sys|_.*|st_.*|St_.*|ST_.*|sT_.*)</excludes>
                                    <inputSchema>public</inputSchema>
                                    <includeSequences>false</includeSequences>
                                    <includePrimaryKeys>false</includePrimaryKeys>
                                    <includeUniqueKeys>false</includeUniqueKeys>
                                    <includeForeignKeys>false</includeForeignKeys>
                                    <customTypes>
                                        <customType>
                                            <name>Geometry</name>
                                            <type>com.vividsolutions.jts.geom.Geometry</type>
                                            <binding>net.dmitry.jooq.postgis.spatial.binding.JTSGeometryBinding
                                            </binding>
                                        </customType>
                                    </customTypes>
                                    <forcedTypes>
                                        <forcedType>
                                            <userType>org.threeten.bp.LocalDateTime</userType>
                                            <converter>
                                                io.edanni.rndl.server.infrastructure.jooq.converter.LocalDateTimeConverter
                                            </converter>
                                            <types>timestamp\ without\ time\ zone</types>
                                        </forcedType>
                                        <forcedType>
                                            <userType>org.threeten.bp.LocalTime</userType>
                                            <converter>
                                                io.edanni.rndl.server.infrastructure.jooq.converter.LocalTimeConverter
                                            </converter>
                                            <types>time\ without\ time\ zone</types>
                                        </forcedType>
                                        <forcedType>
                                            <userType>org.threeten.bp.OffsetDateTime</userType>
                                            <converter>
                                                io.edanni.rndl.server.infrastructure.jooq.converter.OffsetDateTimeConverter
                                            </converter>
                                            <types>timestamp\ with\ time\ zone</types>
                                        </forcedType>
                                        <forcedType>
                                            <name>Geometry</name>
                                            <types>(geometry|GEOMETRY|geography|GEOGRAPHY)</types>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <target>
                                    <packageName>io.edanni.rndl.jooq</packageName>
                                    <directory>target/generated-sources/jooq-pg</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
        </plugins>
    </build>

</project>
